#!/bin/bash

# Railway Photo Migration Script
# This script helps migrate existing photos to Railway volumes

echo "üöÇ Railway Photo Storage Migration"
echo "=================================="

# Check if we're in the right directory
if [ ! -f "package.json" ]; then
    echo "‚ùå Error: Please run this script from the project root directory"
    exit 1
fi

echo "üìÅ Current photos found:"
if [ -d "server/uploads/photos" ]; then
    photo_count=$(ls -1 server/uploads/photos/*.jpg 2>/dev/null | wc -l)
    echo "   üì∏ $photo_count photos in server/uploads/photos/"
    if [ $photo_count -gt 0 ]; then
        echo "   Photos to migrate:"
        ls -la server/uploads/photos/*.jpg | awk '{print "     " $9 " (" $5 " bytes)"}'
    fi
else
    echo "   üìÇ No existing photos directory found"
fi

echo ""
echo "üîß Railway Volume Setup Instructions:"
echo "====================================="
echo ""
echo "1. üìã In Railway Dashboard:"
echo "   ‚Ä¢ Go to your FamBam service"
echo "   ‚Ä¢ Click on 'Variables' tab"
echo "   ‚Ä¢ Add environment variable:"
echo "     RAILWAY_VOLUME_MOUNT_PATH=/app/data"
echo ""
echo "2. üíæ Add Persistent Volume:"
echo "   ‚Ä¢ Go to 'Settings' tab in Railway"
echo "   ‚Ä¢ Scroll to 'Volumes' section"
echo "   ‚Ä¢ Click 'Add Volume'"
echo "   ‚Ä¢ Mount Path: /app/data"
echo "   ‚Ä¢ Size: 1GB (should be plenty for family photos)"
echo ""
echo "3. üöÄ Deploy Updated Code:"
echo "   ‚Ä¢ The server is already updated to use Railway volumes"
echo "   ‚Ä¢ Deploy your changes to Railway"
echo ""
echo "4. üì§ Upload Existing Photos:"
echo "   ‚Ä¢ After Railway volume is set up, you can:"
echo "   ‚Ä¢ Option A: Re-upload photos through the app (recommended)"
echo "   ‚Ä¢ Option B: Use Railway CLI to copy files directly"
echo ""

if [ $photo_count -gt 0 ]; then
    echo "5. üîÑ Migration Options for Existing Photos:"
    echo ""
    echo "   Option A - Re-upload through app (Recommended):"
    echo "   ‚Ä¢ Photos will be automatically optimized"
    echo "   ‚Ä¢ Ensures proper integration with new system"
    echo "   ‚Ä¢ $photo_count photos to re-upload"
    echo ""
    echo "   Option B - Railway CLI transfer:"
    echo "   ‚Ä¢ Install Railway CLI: npm install -g @railway/cli"
    echo "   ‚Ä¢ railway login"
    echo "   ‚Ä¢ railway shell"
    echo "   ‚Ä¢ Then copy files manually"
fi

echo ""
echo "üìù Code Changes Made:"
echo "==================="
echo "‚úÖ server/index.js - Updated to use photos-railway routes"
echo "‚úÖ server/routes/photos-railway.js - Railway volume support"
echo "‚úÖ client/src/components/PhotoUpload.tsx - Dynamic API URLs"
echo "‚úÖ client/src/pages/Dashboard.tsx - Fixed photo URL handling"
echo ""
echo "üéØ Next Steps:"
echo "============="
echo "1. Set up Railway volume (steps above)"
echo "2. Deploy to Railway"
echo "3. Test photo upload in production"
echo "4. Re-upload existing photos through the app"
echo ""
echo "üí° Volume Benefits:"
echo "=================="
echo "‚úÖ Photos persist across deployments"
echo "‚úÖ No external dependencies"
echo "‚úÖ Simple Railway-native solution"
echo "‚úÖ Automatic backup with Railway"
echo ""
echo "üö® Important Notes:"
echo "=================="
echo "‚Ä¢ Make sure RAILWAY_VOLUME_MOUNT_PATH=/app/data is set"
echo "‚Ä¢ Volume must be mounted to /app/data"
echo "‚Ä¢ Photos will be stored in /app/data/photos/"
echo "‚Ä¢ Test thoroughly before removing local photos"
